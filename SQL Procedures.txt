-- Procedure to load data into SCD1
CREATE OR REPLACE PROCEDURE SCD_DB.PROJECT_DB.PROCESS_RAW_CUSTOMER_STREAM()
RETURNS STRING
LANGUAGE SQL
AS
$$
BEGIN
    MERGE INTO SCD_DB.PROJECT_DB.DIM_CUSTOMER AS tgt
    -- USING SCD_DB.PROJECT_DB.DEDUP_CUSTOMER_RAW_V AS src
    -- USING SCD_DB.PROJECT_DB.CUSTOMER_RAW AS src
    USING SCD_DB.PROJECT_DB.RAW_CUSTOMER_STREAM AS src
    on tgt.ID = src.ID
    WHEN NOT MATCHED THEN
        INSERT (ID,FIRST_NAME,LAST_NAME,STREET_NAME,CITY,STATE,ZIP_CODE,COUNTRY,JOB,EMAIL,PHONE_NUMBER,UPDATE_TIMESTAMP)
        VALUES (src.ID,src.FIRST_NAME,src.LAST_NAME,src.STREET_NAME,src.CITY,src.STATE,src.ZIP_CODE,src.COUNTRY,src.JOB,src.EMAIL,src.PHONE_NUMBER,CURRENT_TIMESTAMP)
    WHEN MATCHED AND 
        (tgt.FIRST_NAME <> src.FIRST_NAME OR
        tgt.LAST_NAME <> src.LAST_NAME OR
        tgt.STREET_NAME <> src.STREET_NAME OR
        tgt.CITY <> src.CITY OR
        tgt.STATE <> src.STATE OR
        tgt.ZIP_CODE <> src.ZIP_CODE OR
        tgt.COUNTRY <> src.COUNTRY OR
        tgt.JOB <> src.JOB OR
        tgt.EMAIL <> src.EMAIL OR
        tgt.PHONE_NUMBER <> src.PHONE_NUMBER)
    THEN 
    UPDATE SET
        tgt.FIRST_NAME = src.FIRST_NAME,
        tgt.LAST_NAME = src.LAST_NAME,
        tgt.STREET_NAME = src.STREET_NAME,
        tgt.CITY = src.CITY,
        tgt.STATE = src.STATE,
        tgt.ZIP_CODE = src.ZIP_CODE,
        tgt.COUNTRY = src.COUNTRY,
        tgt.JOB = src.JOB,
        tgt.EMAIL = src.EMAIL,
        tgt.PHONE_NUMBER = src.PHONE_NUMBER,
        tgt.UPDATE_TIMESTAMP = CURRENT_TIMESTAMP
;
  RETURN 'Success';
END;
$$
;


-- Procedure to load data into SCD2
CREATE OR REPLACE PROCEDURE SCD_DB.PROJECT_DB.PROCESS_DIM_CUSTOMER_STREAM()
  RETURNS STRING
  LANGUAGE SQL
  EXECUTE AS CALLER
AS
$$
BEGIN
    -- 1. Insert New Records into DIM_CUSTOMER_HIST from DIM_CUSTOMER
    INSERT INTO SCD_DB.PROJECT_DB.DIM_CUSTOMER_HIST 
    (ID, FIRST_NAME, LAST_NAME, STREET_NAME, CITY, STATE, ZIP_CODE, COUNTRY, JOB, EMAIL, PHONE_NUMBER, IS_ACTIVE, START_TIME, END_TIME)
    SELECT
        SRC.ID,
        SRC.FIRST_NAME,
        SRC.LAST_NAME,
        SRC.STREET_NAME,
        SRC.CITY,
        SRC.STATE,
        SRC.ZIP_CODE,
        SRC.COUNTRY,
        SRC.JOB,
        SRC.EMAIL,
        SRC.PHONE_NUMBER,
        'True',
        SRC.UPDATE_TIMESTAMP,
        '9999-12-31 23:59:59'
    FROM SCD_DB.PROJECT_DB.DIM_CUSTOMER AS SRC
    JOIN SCD_DB.PROJECT_DB.DIM_CUSTOMER_HIST AS HIST 
    ON SRC.ID = HIST.ID
    WHERE SRC.UPDATE_TIMESTAMP > HIST.START_TIME
    AND HIST.IS_ACTIVE = 'True';

    -- 2. Merge operation to update or insert records from CUSTOMER_STREAM into DIM_CUSTOMER_HIST
    MERGE INTO SCD_DB.PROJECT_DB.DIM_CUSTOMER_HIST AS TGT
    USING SCD_DB.PROJECT_DB.DIM_CUSTOMER_STREAM AS SRC
    ON TGT.ID = SRC.ID 

    -- New record insertion
    WHEN NOT MATCHED AND SRC.METADATA$ACTION = 'INSERT' AND SRC.METADATA$ISUPDATE = 'FALSE' THEN 
        INSERT (
            ID, FIRST_NAME, LAST_NAME, STREET_NAME, CITY, 
            STATE, ZIP_CODE, COUNTRY, JOB, EMAIL, 
            PHONE_NUMBER, IS_ACTIVE, START_TIME, END_TIME
        )
        VALUES (
            SRC.ID, SRC.FIRST_NAME, SRC.LAST_NAME, SRC.STREET_NAME, SRC.CITY, 
            SRC.STATE, SRC.ZIP_CODE, SRC.COUNTRY, SRC.JOB, SRC.EMAIL, 
            SRC.PHONE_NUMBER, 'True', SRC.UPDATE_TIMESTAMP, '9999-12-31 23:59:59'
        )

    -- Update existing active record
    WHEN MATCHED AND SRC.METADATA$ACTION = 'INSERT' AND SRC.METADATA$ISUPDATE = 'TRUE' AND TGT.START_TIME < SRC.UPDATE_TIMESTAMP THEN 
        UPDATE SET 
            IS_ACTIVE = 'False',
            END_TIME = SRC.UPDATE_TIMESTAMP

    -- Handle deletion
    WHEN MATCHED AND SRC.METADATA$ACTION = 'DELETE' AND SRC.METADATA$ISUPDATE = 'FALSE' THEN 
        UPDATE SET 
            IS_ACTIVE = 'False', 
            END_TIME = CURRENT_TIMESTAMP(),
            FIRST_NAME = NULL,
            LAST_NAME = NULL,
            STREET_NAME = NULL,
            CITY = NULL,
            STATE = NULL,
            ZIP_CODE = NULL,
            COUNTRY = NULL,
            JOB = NULL,
            EMAIL = NULL,
            PHONE_NUMBER = NULL;


    -- Truncate Customer_Raw table
    TRUNCATE SCD_DB.PROJECT_DB.CUSTOMER_RAW;


    RETURN 'Success';

END;
$$;

